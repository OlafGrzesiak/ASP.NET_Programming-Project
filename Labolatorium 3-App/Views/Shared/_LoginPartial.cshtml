@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
<head>
</head>

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <div class="d-flex align-items-center">
                <a id="manage" class="nav-link text-dark mr-3" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                    Hello @UserManager.GetUserName(User)!
                </a>
                
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button class="btn" id="logout" type="submit">Logout
                        <span class="mr-3">
                        </span>
                    </button>
                </form>
            </div>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
    }
</ul>
